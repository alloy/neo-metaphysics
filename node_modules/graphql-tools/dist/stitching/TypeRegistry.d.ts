import { GraphQLSchema, GraphQLObjectType, GraphQLType, GraphQLNamedType } from 'graphql';
import { SchemaLink } from './types';
export default class TypeRegistry {
    query?: GraphQLObjectType;
    mutation?: GraphQLObjectType;
    private schemas;
    private schemaByField;
    private types;
    private linksByType;
    constructor();
    getSchemaByRootField(fieldName: string): GraphQLSchema;
    getType(name: string): GraphQLNamedType;
    getLinksByType(name: string): Array<SchemaLink>;
    getLinkByAddress(typeName: string, link: string): SchemaLink;
    resolveType<T extends GraphQLType>(type: T): T;
    addLinks(links: Array<SchemaLink>): void;
    addSchema(schema: GraphQLSchema): void;
    setType(name: string, type: GraphQLNamedType, onTypeConflict?: (leftType: GraphQLNamedType, rightType: GraphQLNamedType) => GraphQLNamedType): void;
    setQuery(query: GraphQLObjectType): void;
    setMutation(mutation: GraphQLObjectType): void;
}
